/************************************************************************ ************************************************************************* @Name :       	QapTcha - jQuery Plugin @Revison :    	4.2 @Date : 		06/09/2012  - dd/mm/YYYY @Author:     	 ALPIXEL Agency - (www.myjqueryplugins.com - www.alpixel.fr) @License :		 Open Source - MIT License : http://www.opensource.org/licenses/mit-license.php ************************************************************************** *************************************************************************/jQuery(document).ready(function ($) {    jQuery.QapTcha = {        build: function (options)        {            var defaults = {                txtLock: 'Locked : form can\'t be submited',                txtUnlock: 'Unlocked : form can be submited',                disabledSubmit: true,                autoRevert: true,                PHPfile: 'Qaptcha.jquery.php',                autoSubmit: false            };            if (this.length > 0)                return jQuery(this).each(function (i) {                    /** Vars **/                    var                            opts = $.extend(defaults, options),                            $this = $(this),                            form = $('form').has($this),                            bgSlider = jQuery('<span>', {'class': 'bgSlider'}),                            Slider = jQuery('<span>', {'class': 'default'}),                            TxtStatus = jQuery('<span>', {'class': 'TxtStatus dropError', text: opts.txtLock}),                            inputQapTcha = jQuery('<input>', {name: generatePass(32), value: generatePass(7), type: 'hidden'});                    ActionField = jQuery('<input>', {name: "action", value: "sliding-captcha", type: 'hidden', class: "SlidingAction"});                    /** Disabled submit button **/                    if (opts.disabledSubmit)                        form.find('input[type=\'submit\']').attr('disabled', 'disabled');                    /** Construct DOM **/                    bgSlider.appendTo($this);                    TxtStatus.insertAfter(bgSlider);                    Slider.appendTo(bgSlider);                    $this.show();                    Slider.draggable({                        revert: function () {                            if (opts.autoRevert)                            {                                if (parseInt(Slider.css('left')) > (bgSlider.width() - Slider.width() - 5)) {                                    return false;                                } else {                                    return true;                                }                            }                        },                        containment: bgSlider,                        axis: 'x',                        stop: function (event, ui) {                            if (ui.position.left > (bgSlider.width() - Slider.width() - 10))                            {                                inputQapTcha.appendTo($this);                                ActionField.appendTo($this);                                // set the SESSION iQaptcha in PHP file                                $.post(opts.PHPfile, {                                    action: 'sliding-captcha',                                    qaptcha_key: inputQapTcha.attr('name')                                },                                        function (data) {                                            if (!data.error)                                            {                                                Slider.addClass("unlock-default");                                                Slider.draggable('disable').css('cursor', 'default');                                                inputQapTcha.val('');                                                TxtStatus.text(opts.txtUnlock).addClass('dropSuccess').removeClass('dropError');                                                form.find('input[type=\'submit\']').removeAttr('disabled');                                                if (opts.autoSubmit)                                                    form.find('input[type=\'submit\']').trigger('click');                                                jQuery(".wpcf7-sliding-captcha").next(".wpcf7-not-valid-tip").remove();                                            }                                        }, 'json');                            }                        }                    });                    function generatePass(nb) {                        var chars = 'azertyupqsdfghjkmwxcvbn23456789AZERTYUPQSDFGHJKMWXCVBN_-#@';                        var pass = '';                        for (i = 0; i < nb; i++) {                            var wpos = Math.round(Math.random() * chars.length);                            pass += chars.substring(wpos, wpos + 1);                        }                        return pass;                    }                    document.addEventListener('wpcf7submit', function (event) {                        if (jQuery(".wpcf7-sliding-captcha").length > 0) {                            jQuery(".wpcf7-sliding-captcha .default").css("left", 0).removeClass("unlock-default ui-draggable-disabled").removeAttr("style");                            TxtStatus.text(opts.txtlock).addClass('dropError').removeClass('dropSuccess');                            form.find('input[type=\'submit\']').attr('disabled', 'disabled');                            lock_form_text = 'Locked : form can\'t be submited';                            unlock_form_text = 'Unlocked : form can be submited';                            jQuery('.wpcf7-sliding-captcha').QapTcha({                                txtLock: lock_form_text,                                txtUnlock: unlock_form_text,                                disabledSubmit: true,                                autoRevert: true,                                autoSubmit: false,                                PHPfile: script_url.plugin_ajax_url                            });                            jQuery('.wpcf7-sliding-captcha .bgSlider').not(":last").remove();                            jQuery('.wpcf7-sliding-captcha .TxtStatus').not(":last").remove();                            jQuery('.wpcf7-sliding-captcha .SlidingAction').remove();                        }                    }, false);                });        }    };    jQuery.fn.QapTcha = jQuery.QapTcha.build;});